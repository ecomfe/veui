@import "../lib.less";

.@{veui-prefix}-steps {
  @connector-gap-x: @dls-steps-connector-spacing-horizontal;
  @connector-gap-y: @dls-steps-connector-spacing-vertical;
  @connector-width: 1px;
  @border-width: 1px;
  @min-step-connector-width: @dls-steps-connector-min-length;
  @reserved-space: @dls-shadow-spread-focus;
  display: flex;

  &-step {
    flex: 1;
    display: flex;
    text-decoration: none;
    overflow: hidden;
    pointer-events: none;
    padding: @reserved-space 0 0 @reserved-space;
    margin: -@reserved-space @connector-gap-x 0 -@reserved-space;

    &-index-container {
      pointer-events: auto;
    }

    &-index {
      flex-grow: 0;
      flex-shrink: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      border-radius: 50%;
      border-width: @border-width;
      border-style: solid;
      .veui-transition(background-color, color, box-shadow, border-color);

      .@{veui-prefix}-icon {
        .dls-icon-size(@dls-steps-marker-icon-size);
      }
    }

    &-content {
      padding-left: @dls-steps-marker-spacing;
      pointer-events: auto;
    }

    &-label {
      line-height: @dls-line-height-1;
      color: @dls-steps-title-font-color;
      font-weight: @dls-steps-title-font-weight;
      margin-right: @connector-gap-x;
      display: inline-block;
      position: relative;
      max-width: @dls-steps-title-max-width;
      word-wrap: break-word;
      .veui-transition(color);

      &::after {
        .make-connector();
        left: dls-sum(100%, @connector-gap-x);
      }
    }

    &-desc {
      .margin(@dls-steps-title-spacing, _, 0);
      color: @dls-steps-desc-font-color;
      max-width: @dls-steps-desc-max-width;
      word-wrap: break-word;
    }

    &:last-child {
      margin-right: 0;
      flex: 0 1 auto;
      .@{veui-prefix}-steps-step-label::after {
        display: none;
      }
    }

    .make-step(@status) {
      @connector-color-name: ~"dls-steps-connector-color-@{status}";
      @bg-color-name: ~"dls-steps-marker-background-color-@{status}";
      @fg-color-name: ~"dls-steps-marker-foreground-color-@{status}";
      @border-color-name: ~"dls-steps-marker-border-color-@{status}";

      @connector-color: @@connector-color-name;
      @bg-color: @@bg-color-name;
      @fg-color: @@fg-color-name;
      @border-color: @@border-color-name;

      &-connector,
      &-connector-placeholder {
        &-@{status} {
          border-color: @connector-color;
        }
      }

      &-@{status} {
        &::before {
          border-color: @connector-color;
        }

        .@{veui-prefix}-steps-step-index {
          border-color: @border-color;
          color: @fg-color;
          background-color: @bg-color;
        }
      }

      &-next-@{status} {
        &::after,
        .@{veui-prefix}-steps-step-label::after,
        .@{veui-prefix}-steps-step-index::after {
          border-color: @connector-color;
        }
      }

      .make-interactive() when not (@status = stateless) {
        @bg-color-hover-name: ~"dls-steps-marker-background-color-@{status}-hover";
        @bg-color-focus-name: ~"dls-steps-marker-background-color-@{status}-focus";
        @bg-color-active-name: ~"dls-steps-marker-background-color-@{status}-active";
        @bg-color-hover: @@bg-color-hover-name;
        @bg-color-focus: @@bg-color-focus-name;
        @bg-color-active: @@bg-color-active-name;

        a&-@{status} {
          &:hover {
            .@{veui-prefix}-steps-step-index {
              background-color: @bg-color-hover;
            }
          }

          &[data-focus-visible-added] {
            .@{veui-prefix}-steps-step-index {
              background-color: @bg-color-focus;
            }
          }

          &:active {
            .@{veui-prefix}-steps-step-index {
              background-color: @bg-color-active;
            }
          }
        }
      }
      .make-interactive();
    }

    .make-step(incomplete);
    .make-step(completed);
    .make-step(error);
    .make-step(current);
    .make-step(error-current);
    .make-step(stateless);

    &-incomplete &-label {
      color: @dls-steps-title-font-color-incomplete !important;
    }

    &-incomplete &-desc {
      color: @dls-steps-desc-font-color-incomplete !important;
    }

    a& {
      &:hover {
        .@{veui-prefix}-steps-step-label {
          color: @dls-steps-title-font-color-hover;
        }
      }

      &:active {
        .@{veui-prefix}-steps-step-label {
          color: @dls-steps-title-font-color-active;
        }
      }
    }

    &[data-focus-visible-added] {
      .@{veui-prefix}-steps-step-index {
        border-color: @dls-steps-marker-border-color-focus;
        box-shadow: @dls-steps-marker-shadow-focus;
      }

      .@{veui-prefix}-steps-step-label {
        color: @dls-steps-title-font-color-focus;
      }
    }

    &-error[data-focus-visible-added],
    &-error-current[data-focus-visible-added] {
      .@{veui-prefix}-steps-step-index {
        border-color: @dls-steps-marker-border-color-error-focus;
        box-shadow: @dls-steps-marker-shadow-error-focus;
      }
    }
  }

  .@{veui-prefix}-steps a,
  .@{veui-prefix}-link {
    &:hover,
    &[data-focus-visible-added],
    &:active,
    &.@{veui-prefix}-disabled {
      text-decoration: none;
    }
  }

  .@{veui-prefix}-link:not(.@{veui-prefix}-steps-step-activatable) {
    cursor: default;
  }

  .make-connector() {
    content: "";
    width: 9999px;
    border-top-width: @connector-width;
    pointer-events: none;
    margin: 0;
    position: absolute;
  }

  .make-fixed-length-connector() {
    content: "";
    width: @min-step-connector-width;
    border-top-width: @connector-width;
    pointer-events: none;
  }

  &[ui~="label-vertical"] {
    .@{veui-prefix}-steps-step {
      flex-direction: column;
      position: relative;
      margin-right: 0;
      text-align: center;
      flex: 1;

      &-content {
        padding-left: 0;
      }

      &-label {
        margin-top: @dls-steps-marker-spacing;
        margin-right: 0;

        &::after {
          display: none;
        }
      }

      &-index,
      &-desc {
        .margin(_, auto);
      }

      &-connector {
        flex-grow: 0;
        .make-fixed-length-connector();
      }

      &::after {
        .make-connector();
      }

      &::before {
        .make-connector();
      }

      &:first-child::before,
      &:last-child::after {
        display: none;
      }
    }
  }

  &[ui~="vertical"] {
    flex-direction: column;
    width: fit-content;

    .@{veui-prefix}-steps-step {
      margin-right: 0;
      margin-top: dls-sum(@connector-gap-y, -@reserved-space);
      display: flex;
      overflow: initial;

      &-index-container {
        display: flex;
        flex-direction: column;

        .@{veui-prefix}-steps-step-connector-placeholder {
          flex-grow: 1;
          border-left-width: @connector-width;
          min-height: dls-sum(
            @min-step-connector-width,
            -@dls-steps-connector-spacing-vertical
          );
          margin-top: @connector-gap-y;
          pointer-events: none;
        }
      }

      &-index {
        position: relative;
        margin-top: 0;
        flex-grow: 0;
      }

      &-label,
      &-desc {
        max-width: inherit;
      }

      &-connector {
        height: @dls-steps-connector-spacing-vertical;
        border-left-width: @connector-width;
        border-left-style: solid;
        pointer-events: none;
      }

      &-label::after,
      &:last-child .@{veui-prefix}-steps-step-index::after {
        display: none;
      }

      &:first-child {
        margin-top: -@reserved-space;
      }
    }
  }

  .make-size(@size) {
    @marker-size-name: ~"dls-steps-marker-size-@{size}";
    @title-font-size-name: ~"dls-steps-title-font-size-@{size}";
    @desc-font-size-name: ~"dls-steps-desc-font-size-@{size}";
    @marker-font-size-name: ~"dls-steps-marker-font-size-@{size}";

    @marker-size: @@marker-size-name;
    @title-font-size: @@title-font-size-name;
    @desc-font-size: @@desc-font-size-name;
    @marker-font-size: @@marker-font-size-name;

    @title-height: dls-line-height(@dls-line-height-1, @title-font-size);

    .@{veui-prefix}-steps {
      &-step {
        &-index {
          .size(@marker-size);
          line-height: @marker-size - @border-width * 2;
          font-size: @marker-font-size;
        }

        &-label {
          margin-top: dls-sum(@marker-size / 2, -@title-height / 2);
          font-size: @title-font-size;

          &::after {
            top: dls-sum(@title-height / 2, -@connector-width / 2);
          }
        }

        &-desc {
          font-size: @desc-font-size;
        }
      }
    }

    &[ui~="label-vertical"] {
      .@{veui-prefix}-steps-step {
        &-connector {
          margin-top: dls-sum(@marker-size / 2, -@connector-width / 2);
        }

        &::after {
          top: dls-sum(
            @marker-size / 2,
            @reserved-space,
            -@connector-width / 2
          );
          left: dls-sum(50%, @marker-size / 2, @connector-gap-x);
        }

        &::before {
          top: dls-sum(
            @marker-size / 2,
            @reserved-space,
            -@connector-width / 2
          );
          right: dls-sum(50%, @marker-size / 2, @connector-gap-x);
        }
      }
    }

    &[ui~="vertical"] {
      .@{veui-prefix}-steps-step {
        &-index::after {
          top: @marker-size + @connector-gap-y;
          left: @marker-size / 2;
        }

        &-connector-placeholder {
          margin-left: dls-sum(@marker-size / 2, -@connector-width / 2);
        }

        &-connector {
          margin-left: dls-sum(@marker-size / 2, -@connector-width / 2);
        }
      }
    }
  }

  &[ui~="m"] {
    .make-size(m);
  }

  &[ui~="s"] {
    .make-size(s);
  }

  &[ui~="dot"] {
    .@{veui-prefix}-steps-step-index {
      border-style: solid;
      color: transparent;

      .@{veui-prefix}-icon {
        display: none;
      }
    }

    .make-step(@status) {
      @bg-color-name: ~"dls-steps-marker-background-color-dot-@{status}";
      @border-color-name: ~"dls-steps-marker-border-color-dot-@{status}";

      @bg-color: @@bg-color-name;
      @border-color: @@border-color-name;

      .@{veui-prefix}-steps-step-@{status} {
        .@{veui-prefix}-steps-step-index {
          outline: @connector-width solid @border-color;
          outline-offset: -1px;
          border-color: @bg-color;
          background-color: transparent;
        }
      }

      .make-interactive() when not (@status = stateless) {
        @bg-color-hover-name: ~"dls-steps-marker-background-color-dot-@{status}-hover";
        @bg-color-focus-name: ~"dls-steps-marker-background-color-dot-@{status}-focus";
        @bg-color-active-name: ~"dls-steps-marker-background-color-dot-@{status}-active";
        @bg-color-hover: @@bg-color-hover-name;
        @bg-color-focus: @@bg-color-focus-name;
        @bg-color-active: @@bg-color-active-name;

        a.@{veui-prefix}-steps-step-@{status} {
          &:hover {
            .@{veui-prefix}-steps-step-index {
              border-color: @bg-color-hover;
              background-color: transparent;
            }
          }

          &[data-focus-visible-added] {
            .@{veui-prefix}-steps-step-index {
              border-color: @bg-color-focus;
              background-color: transparent;
            }
          }

          &:active {
            .@{veui-prefix}-steps-step-index {
              border-color: @bg-color-active;
              background-color: transparent;
            }
          }
        }
      }
      .make-interactive();
    }

    .make-step(incomplete);
    .make-step(completed);
    .make-step(error);
    .make-step(current);
    .make-step(error-current);
    .make-step(stateless);

    .@{veui-prefix}-steps-step {
      &[data-focus-visible-added] {
        .@{veui-prefix}-steps-step-index {
          outline-color: @dls-steps-marker-border-color-focus;
        }
      }

      &-error[data-focus-visible-added],
      &-error-current[data-focus-visible-added] {
        .@{veui-prefix}-steps-step-index {
          outline-color: @dls-steps-marker-border-color-error-focus;
        }
      }
    }

    .make-size(@size) {
      @marker-size-name: ~"dls-steps-marker-size-dot-@{size}";
      @ring-width-name: ~"dls-steps-marker-ring-width-dot-@{size}";
      @title-font-size-name: ~"dls-steps-title-font-size-@{size}";

      @marker-size: @@marker-size-name;
      @ring-width: @@ring-width-name;
      @title-font-size: @@title-font-size-name;

      @title-height: dls-line-height(@dls-line-height-1, @title-font-size);

      .@{veui-prefix}-steps {
        &-step {
          &-index {
            .size(@marker-size);
            border-width: @ring-width;
            line-height: @marker-size - @border-width * 2;
          }

          &-label {
            margin-top: dls-sum(@marker-size / 2, -@title-height / 2);

            &::after {
              top: dls-sum(@title-height / 2, -@connector-width / 2);
            }
          }

          &-current,
          &-error-current {
            .@{veui-prefix}-steps-step-index {
              border-width: @marker-size / 2;
            }
          }
        }
      }

      &[ui~="label-vertical"] {
        .@{veui-prefix}-steps-step {
          &-connector {
            margin-top: dls-sum(@marker-size / 2, -@connector-width / 2);
          }

          &::after {
            top: dls-sum(
              @marker-size / 2,
              @reserved-space,
              -@connector-width / 2
            );
            left: dls-sum(50%, @marker-size / 2, @connector-gap-x);
          }

          &::before {
            top: dls-sum(
              @marker-size / 2,
              @reserved-space,
              -@connector-width / 2
            );
            right: dls-sum(50%, @marker-size / 2, @connector-gap-x);
          }
        }
      }

      &[ui~="vertical"] {
        .@{veui-prefix}-steps-step {
          .make-index-position() when (@marker-size < @title-height) {
            & ~ .@{veui-prefix}-steps-step {
              margin-top: dls-sum(
                @connector-gap-y,
                @marker-size / 2,
                -@title-height / 2,
                -@reserved-space
              );
            }

            &-index-container {
              margin-top: dls-sum(-@marker-size / 2, @title-height / 2);
            }
          }

          .make-index-position();

          &-index {
            &::after {
              top: @marker-size + @connector-gap-y;
              left: @marker-size / 2;
            }
          }

          &-connector-placeholder {
            margin-left: dls-sum(@marker-size / 2, -@connector-width / 2);
          }

          &-connector {
            margin-left: dls-sum(@marker-size / 2, -@connector-width / 2);
          }
        }
      }
    }

    &[ui~="m"] {
      .make-size(m);
    }

    &[ui~="s"] {
      .make-size(s);
    }
  }

  &-step-connector,
  &-step-label::after,
  &[ui~="label-vertical"] &-step::before,
  &[ui~="label-vertical"] &-step::after {
    border-top-style: solid;
  }

  &-step-connector-stateless,
  &-step-stateless &-step-label::after,
  &[ui~="label-vertical"] &-step-stateless::before,
  &[ui~="label-vertical"] &-step-stateless::after {
    border-top-style: dashed;
  }

  &[ui~="vertical"] &-step-connector,
  &[ui~="vertical"] &-step-connector-placeholder {
    border-top-style: none;
    border-left-style: solid;
  }

  &[ui~="vertical"] &-step-connector-stateless,
  &[ui~="vertical"] &-step-connector-placeholder-stateless {
    border-top-style: none;
    border-left-style: dashed;
  }
}
