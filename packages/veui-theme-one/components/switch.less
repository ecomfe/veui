@import "../lib.less";

.veui-switch {
  @gap: 2px;
  @height-large: 30px;
  @height-normal: 24px;
  @height-small: 18px;
  @aspect-ratio: 50px / @height-normal;

  .metrics(@size: @height-normal) {
    .veui-switch {
      &-switcher {
        width: @size * @aspect-ratio;
        height: @size;
        border-radius: @size / 2;
      }

      &-button {
        .size(@size - @gap * 2);
      }

      &-label {
        line-height: @size;
      }
    }

    :checked + .veui-switch-switcher .veui-switch-button {
      transform: translateX(@size * (@aspect-ratio - 1));
    }
  }

  display: inline-block;
  cursor: pointer;
  outline: none;
  .metrics();

  &-switcher,
  &-label {
    vertical-align: middle;
  }

  &-label {
    display: inline-block;
    margin-left: 10px;
  }

  &-switcher {
    display: inline-block;
    background-color: @veui-gray-color-4;
    user-select: none;
    .veui-transition(background-color, box-shadow);
  }

  .focus-visible + &-switcher {
    .veui-focus-shadow();
  }

  :checked.focus-visible + &-switcher {
    .veui-focus-shadow(fadeout(@veui-brand-color-5, 50%));
  }

  &-button {
    display: inline-block;
    position: relative;
    margin: @gap;
    background-color: #fff;
    border-radius: 50%;
    .veui-transition(transform);
  }

  :checked + &-switcher {
    background-color: @veui-brand-color;
  }

  &.veui-readonly {
    cursor: default;
  }

  &.veui-disabled {
    cursor: not-allowed;
  }

  &.veui-readonly &-switcher,
  &.veui-disabled &-switcher {
    background-color: @veui-gray-color-5;
  }

  &[ui~="small"] {
    .metrics(@height-small);
  }

  &[ui~="large"] {
    .metrics(@height-large);
  }

  input {
    position: absolute;
    opacity: 0;
  }
}
